generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int   @id @default(autoincrement())
  email String @unique
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  emailVerified DateTime?
  image String?
  favouriteIds Int[]
  accounts Account[]
  listings Listing[]
  reservations Reservation[]
}

model Account {
    id    Int   @id @default(autoincrement())
    type  String
    provider String
    providerAccountId String
    refresh_token String? @db.Text
    access_token String? @db.Text
    token_type String?
    expires_at Int?
    scope String?
    id_token String? @db.Text
    session_state String?
    userId Int  
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    @@unique([provider, providerAccountId]) 
}

model Listing {
    id    Int   @id @default(autoincrement())
    title String
    description String
    imagesSrc String[]
    createdAt DateTime @default(now())
    category String
    roomCount Int
    bathroomCount Int
    guestCount Int
    locationValue String
    price Int
    userId Int
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    reservations Reservation[]
}

model Reservation {
    id    Int   @id @default(autoincrement())
    userId Int
    listingId Int
    startDate DateTime
    endDate DateTime
    createdAt DateTime @default(now())
    totalPrice Int
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
}
